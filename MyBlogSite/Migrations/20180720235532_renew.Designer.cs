// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyBlogSite.Models;

namespace MyBlogSite.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20180720235532_renew")]
    partial class renew
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MyBlogSite.Models.BrainstormBoard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuthorId");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<bool?>("IsShared");

                    b.Property<string>("Title");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("BrainstormBoards");
                });

            modelBuilder.Entity("MyBlogSite.Models.Login", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("IsAdmin");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Logins");
                });

            modelBuilder.Entity("MyBlogSite.Models.StickyNote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BoardId");

                    b.Property<int?>("BrainstormBoardId");

                    b.Property<string>("Color");

                    b.Property<string>("Content");

                    b.Property<int>("PositionLeft");

                    b.Property<int>("PositionTop");

                    b.HasKey("Id");

                    b.HasIndex("BrainstormBoardId");

                    b.ToTable("StickyNotes");
                });

            modelBuilder.Entity("MyBlogSite.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<string>("EmailAddress")
                        .IsRequired();

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<int>("LoginId");

                    b.HasKey("Id");

                    b.HasIndex("LoginId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MyBlogSite.Models.BrainstormBoard", b =>
                {
                    b.HasOne("MyBlogSite.Models.User", "User")
                        .WithMany("BrainstormBoards")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("MyBlogSite.Models.StickyNote", b =>
                {
                    b.HasOne("MyBlogSite.Models.BrainstormBoard", "BrainstormBoard")
                        .WithMany("StickyNotes")
                        .HasForeignKey("BrainstormBoardId");
                });

            modelBuilder.Entity("MyBlogSite.Models.User", b =>
                {
                    b.HasOne("MyBlogSite.Models.Login", "Login")
                        .WithMany("Users")
                        .HasForeignKey("LoginId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
